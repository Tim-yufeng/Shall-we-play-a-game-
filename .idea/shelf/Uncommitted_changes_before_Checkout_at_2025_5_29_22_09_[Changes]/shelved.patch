Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d47307c7-5b34-406b-bade-3eb76e2f926f\" name=\"Changes\" comment=\"feat(FirstTry): Two games as a start\">\r\n      <change afterPath=\"$PROJECT_DIR$/All_universities.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/First_section 3.0.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/First_section_3.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Sec_section.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sec_section.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"NJ_universities\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Tim-yufeng&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Tim-yufeng/Shall-we-play-a-game-.git&quot;,\r\n    &quot;accountId&quot;: &quot;43807bf6-af04-42db-bc03-4e68b6ee8eba&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2xezkNeXkUNmjoBnXFVqBjh7Eze\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.Are you a member of Yang Da family.executor\": \"Run\",\r\n    \"Python.FirstTry 躲避障碍物.executor\": \"Run\",\r\n    \"Python.First_section 3.0.executor\": \"Run\",\r\n    \"Python.First_section.executor\": \"Run\",\r\n    \"Python.First_section_3.executor\": \"Run\",\r\n    \"Python.Sec_section.executor\": \"Run\",\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.躲避障碍物（南京高校）.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"junie.onboarding.icon.badge.shown\": \"true\",\r\n    \"last_opened_file_path\": \"D:/My-Matplotlib-Program-/Some other practice/数据集可视化.py\",\r\n    \"settings.editor.selected.configurable\": \"inlay.hints\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-890ed5b35930-d9c5bdb153f4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.23774.444\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d47307c7-5b34-406b-bade-3eb76e2f926f\" name=\"Changes\" comment=\"\" />\r\n      <created>1748313470092</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1748313470092</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"feat(FirstTry): Two games as a start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748324577683</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748324577683</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"feat(FirstTry): Two games as a start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748325669549</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748325669549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"feat(FirstTry): Two games as a start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748328674516</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748328674516</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"feat(FirstTry): Two games as a start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748333172706</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748333172706</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"feat(FirstTry): Two games as a start\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat(FirstTry): Two games as a start\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision bbcc522be7f3affcac14b09196a693494bf4be0f)
+++ b/.idea/workspace.xml	(date 1748487552533)
@@ -4,13 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d47307c7-5b34-406b-bade-3eb76e2f926f" name="Changes" comment="feat(FirstTry): Two games as a start">
-      <change afterPath="$PROJECT_DIR$/All_universities.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/First_section 3.0.py" beforeDir="false" afterPath="$PROJECT_DIR$/First_section_3.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Sec_section.py" beforeDir="false" afterPath="$PROJECT_DIR$/Sec_section.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-    </list>
+    <list default="true" id="d47307c7-5b34-406b-bade-3eb76e2f926f" name="Changes" comment="feat(FirstTry): Two games as a start" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
Index: First_section_3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport random\r\nimport matplotlib\r\nfrom Sec_section import SCREEN_HEIGHT, SCREEN_WIDTH, sec_section\r\n\r\n# 初始化颜色和字体\r\nWHITE = (255, 255, 255)\r\nBLACK = (0, 0, 0)\r\nPURPLE = (105, 43, 128)\r\n\r\n# 全局变量\r\nall_sprites = pygame.sprite.Group()\r\nobstacles = pygame.sprite.Group()\r\ngame_over = False\r\nround_completed = False\r\nOBSTACLE_FREQ = 500  # 障碍物生成间隔（毫秒）\r\nlast_obstacle = 0\r\nscore = 0\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        try:\r\n            self.image = pygame.image.load(\"ncu.jpg\").convert_alpha()\r\n            self.image = pygame.transform.scale(self.image, (150, 150))\r\n        except pygame.error as e:\r\n            print(f\"无法加载图片: {e}\")\r\n            self.image = pygame.Surface((150, 150))\r\n            self.image.fill(PURPLE)\r\n        self.rect = self.image.get_rect()\r\n        self.rect.center = (SCREEN_WIDTH // 2, SCREEN_HEIGHT - 50)\r\n        self.speed = 5\r\n\r\n    def update(self):\r\n        keys = pygame.key.get_pressed()\r\n        if keys[pygame.K_LEFT] and self.rect.left > 0:\r\n            self.rect.x -= self.speed\r\n        if keys[pygame.K_RIGHT] and self.rect.right < SCREEN_WIDTH:\r\n            self.rect.x += self.speed\r\n\r\nclass Obstacle(pygame.sprite.Sprite):\r\n    def __init__(self, color, name, score, size, mediumSpeed):\r\n        # 1. 创建带透明通道的 Surface\r\n\r\n        # self.image.fill(color)  # 如果需要半透明背景，可以取消注释并调整 alpha\r\n\r\n        super().__init__()\r\n        self.image = pygame.Surface((size, size), pygame.SRCALPHA)  # 关键：SRCALPHA 启用透明度\r\n        # self.image = pygame.Surface((size, size))\r\n        # self.image.fill(color)\r\n        self.image.fill((*color, 128))  # RGBA，A=128（半透明）\r\n        font = pygame.font.Font(None, size//2)\r\n        text = font.render(name, True, PURPLE)\r\n        text_rect = text.get_rect(center=(size//2, size//2))\r\n        self.image.blit(text, text_rect)\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = random.randint(0, SCREEN_WIDTH - self.rect.width)\r\n        self.rect.y = -self.rect.height\r\n        self.speed = random.randint(mediumSpeed-1, mediumSpeed+1)\r\n        self.score = score\r\n\r\n    def update(self):\r\n        self.rect.y += self.speed\r\n        if self.rect.top > SCREEN_HEIGHT:\r\n            self.kill()\r\n\r\nclass Obstacle_1(Obstacle):\r\n    def __init__(self):  # 三江师范学堂\r\n        super().__init__(WHITE, '1902', 2,50,5)\r\n\r\n\r\nclass Obstacle_2(Obstacle):  # 两江师范学堂\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1906', 2,50,5)\r\n\r\n\r\nclass Obstacle_3(Obstacle):  # 南京高等师范学校\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1910', 3,50,5)\r\n\r\n\r\nclass Obstacle_4(Obstacle):  # 国立东南大学\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1921', 3,50,5)\r\n\r\n\r\nclass Obstacle_5(Obstacle):  # 国立中央大学\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1928', 5,50,5)\r\n\r\n\r\nclass Obstacle_6(Obstacle):  # 西迁重庆\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1937', 5,50,5)\r\n\r\n\r\nclass Obstacle_7(Obstacle):  # 国立南京大学\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1949', 3,50,5)\r\n\r\n\r\nclass Obstacle_8(Obstacle):  # 解体QAQ\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1952', 0,50,5)\r\n\r\n\r\nclass Obstacle_9(Obstacle):  # 交大西迁\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1956', 0,50,5)\r\n\r\n\r\nclass Obstacle_10(Obstacle):  # 科大诞生\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1958', 0,50,5)\r\n\r\nclass Obstacle_11(Obstacle):  # 解体QAQ\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1952', 0,150,3)\r\n\r\nclass Obstacle_12(Obstacle):  # 交大西迁\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1956', 0,150,3)\r\n\r\n\r\nclass Obstacle_13(Obstacle):  # 科大诞生\r\n    def __init__(self):\r\n        super().__init__(WHITE, '1958', 0,150,3)\r\ndef draw_multiline_text(surface, font, text, color, x, y, line_height=40):\r\n    \"\"\"渲染多行文本（支持 `\\n`）\"\"\"\r\n    for i, line in enumerate(text.splitlines()):  # 按 `\\n` 分割\r\n        text_surface = font.render(line, True, color)\r\n        text_rect = text_surface.get_rect()\r\n        text_rect.topleft = (x, y + i * line_height)\r\n        surface.blit(text_surface, text_rect)\r\n\r\n# def after_100_score():\r\n#     global OBSTACLE_FREQ, last_obstacle\r\n#     OBSTACLE_FREQ = 200\r\n#     last_obstacle = pygame.time.get_ticks()\r\n#     for _ in range(50):\r\n#         obstacle_type = random.choice([Obstacle_11, Obstacle_12, Obstacle_13])\r\n#         obstacle = obstacle_type()\r\n#         all_sprites.add(obstacle)\r\n#         obstacles.add(obstacle)\r\n\r\ndef after_100_score():\r\n    occupied_positions = []  # 记录已占用位置\r\n    for _ in range(30):\r\n        obstacle_type = random.choice([Obstacle_11, Obstacle_12, Obstacle_13])\r\n        obstacle = obstacle_type()\r\n        maxattempts=500 # 分散障碍物的尝试次数\r\n        i=0\r\n        # 随机位置，直到不与其他障碍物重叠\r\n        while i<=maxattempts:\r\n            obstacle.rect.x = random.randint(0, SCREEN_WIDTH - obstacle.rect.width)\r\n            obstacle.rect.y = random.randint(-200, -obstacle.rect.height)  # 从顶部外生成\r\n            i+=1\r\n            # 检查是否与已有障碍物重叠\r\n            if not any(obstacle.rect.colliderect(pygame.Rect(x, y, 200, 200)) for (x, y) in occupied_positions):\r\n                occupied_positions.append((obstacle.rect.x, obstacle.rect.y))\r\n                break\r\n        all_sprites.add(obstacle)\r\n        obstacles.add(obstacle)\r\n\r\n\r\ndef fir_section():\r\n    global game_over, round_completed, OBSTACLE_FREQ, last_obstacle, score\r\n    pygame.init()\r\n    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))\r\n    chinese_font = pygame.font.Font(r\"Fonts_Package_fc12b50164b107e5d087c5f0bbbf6d82\\SimHei\\simhei.ttf\", 36)\r\n    pygame.display.set_caption(\"京华风云\")\r\n    clock = pygame.time.Clock()\r\n    font = pygame.font.Font(None, 36)\r\n\r\n    # 重置游戏状态\r\n    all_sprites.empty()\r\n    obstacles.empty()\r\n    player = Player()\r\n    all_sprites.add(player)\r\n    score = 0\r\n    game_over = False\r\n    round_completed = False\r\n    last_obstacle = pygame.time.get_ticks()\r\n\r\n    # 新增变量：用于过渡阶段计时\r\n    transition_start_time = None\r\n    transition_duration = 4000  # 过渡阶段持续时间（毫秒）\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n                pygame.quit()\r\n                return\r\n\r\n        if not game_over and pygame.display.get_init():\r\n            screen.fill(WHITE)\r\n            all_sprites.update()\r\n\r\n            if not round_completed:\r\n                # 正常游戏阶段的障碍物生成\r\n                now = pygame.time.get_ticks()\r\n                if now - last_obstacle > OBSTACLE_FREQ:\r\n                    obstacle_type = random.choice([Obstacle_1, Obstacle_2, Obstacle_3, Obstacle_4, Obstacle_5,\r\n                                                   Obstacle_6, Obstacle_7, Obstacle_8, Obstacle_9, Obstacle_10])\r\n                    obstacle = obstacle_type()\r\n                    all_sprites.add(obstacle)\r\n                    obstacles.add(obstacle)\r\n                    last_obstacle = now\r\n\r\n                # 碰撞检测\r\n                collided_obstacles = pygame.sprite.spritecollide(player, obstacles, True)\r\n                for obstacle in collided_obstacles:\r\n                    score += obstacle.score\r\n                    if isinstance(obstacle, (Obstacle_8, Obstacle_9, Obstacle_10)):\r\n                        if score < 100:\r\n                            game_over = True\r\n                            game_result = \"\"\"很遗憾,你家央大解体了，你再也见不到他了哦~\"\"\"\r\n                    elif score >= 100:\r\n                        round_completed = True\r\n                        transition_start_time = pygame.time.get_ticks()  # 记录过渡开始时间\r\n                        after_100_score()\r\n\r\n            else:\r\n                # 过渡阶段（round_completed = True）\r\n                now = pygame.time.get_ticks()\r\n                if now - transition_start_time >= transition_duration:\r\n                    running = False\r\n                    sec_section()  # 进入下一回合\r\n\r\n            # 绘制所有精灵\r\n            all_sprites.draw(screen)\r\n\r\n            # 显示分数\r\n            score_text = font.render(f\"Score: {score}\", True, BLACK)\r\n            screen.blit(score_text, (10, 10))\r\n\r\n            # 在过渡阶段显示\"恭喜进入下一回合\"\r\n            if round_completed:\r\n                text = \"你赢了!你家央大已经爱死你啦~~~\\n\\n恭喜进入下一回合!\"\r\n                draw_multiline_text(screen, chinese_font, text, BLACK, SCREEN_WIDTH // 2 - 240, SCREEN_HEIGHT // 2 - 50)\r\n                # result_text = chinese_font.render(\"你赢了!你家央大已经爱死你啦~~~\\n\\n恭喜进入下一回合!\", True, BLACK)\r\n                # screen.blit(result_text, (SCREEN_WIDTH // 2 - result_text.get_width() // 2,\r\n                #                           SCREEN_HEIGHT // 2 - result_text.get_height() // 2))\r\n\r\n            pygame.display.flip()\r\n\r\n\r\n        elif game_over:\r\n            # 游戏结束处理\r\n            screen.fill(WHITE)\r\n            result_text = chinese_font.render(game_result, True, BLACK)\r\n            screen.blit(result_text, (SCREEN_WIDTH // 2 - result_text.get_width() // 2,\r\n                                      SCREEN_HEIGHT // 2 - result_text.get_height() // 2))\r\n            pygame.display.flip()\r\n            pygame.time.delay(2000)\r\n            running = False\r\n\r\n        clock.tick(60)\r\n\r\n    pygame.quit()\r\n\r\nif __name__ == '__main__':\r\n    fir_section()
===================================================================
diff --git a/First_section_3.py b/First_section_3.py
--- a/First_section_3.py	(revision bbcc522be7f3affcac14b09196a693494bf4be0f)
+++ b/First_section_3.py	(date 1748527771416)
@@ -30,6 +30,7 @@
         self.rect = self.image.get_rect()
         self.rect.center = (SCREEN_WIDTH // 2, SCREEN_HEIGHT - 50)
         self.speed = 5
+        self.fade=False
 
     def update(self):
         keys = pygame.key.get_pressed()
